openapi: 3.1.0

info:
  version: 1.0.0
  title: Weroad
  x-redocly-sidebar-toc:
    - title: My Section
      href: ./path/to/documentation.md#my-section
  description: |
    # Introduction
    This API is documented in **OpenAPI format**.

    # Authentication
    This API offers the standard way of authenticating requests via `Bearer` token. Once you get your token (there's no endpoint, so it's a manual operation) you must set the Authorization header like this: `Authorization: Bearer <your-token>`.

    # HTTP Status Codes
    This API uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the **2xx** range indicate success. Codes in the **4xx** range indicate an error that failed given the information provided (e.g., a required parameter was omitted, etc.). Codes in the **5xx** range indicate an error with servers.

    | Status | Name | Description |
    | --- | --- | --- |
    | 200 | OK | Everything worked as expected |
    | 201 | Created | The object has been created successfully |
    | 204 | No Content | Everything worked as expected with no data response |
    | 400 | Bad Request | The request was unacceptable |
    | 401 | Unauthorized | The request was unauthenticated |
    | 403 | Forbidden | The request was accepted, but has no permissions to perform the operation |
    | 404 | Not Found | Not Found	The requested resource doesn't exist |
    | 422 | Unprocessable entity | The input data provided is invalid. Check the errors in the response. |
    | 429 | Too Many Requests | Too many requests hit the API too quickly |
    | 500, 502, 503, 504 | Server Errors | Something went wrong on our servers |

    # API Responses
    ## Error Responses
    All the errors thrown by the API will share a common structure along with an [http status code](#section/HTTP-Status-Codes).

    | Field | Type | Description | Required |
    | --- | --- | --- | --- |
    | message | `string` | A message indicating what happened | ✅ |
    | errors | `array<object>` | The errors that caused the failure when providing input to the request | ⚠️ Only for *422* status code |
    | exception | `string` | The exception thrown | ⚠️ Only in local environment |
    | trace | `array<object>` | Exception's trace | ⚠️ Only in local environment |

    Example:
    ```json
    {
        "message": "Client not found",
        "exception": "App\\Exceptions\\ClientNotFound",
        "trace": [
            {...},
            {...}
        ]
    }
    ```

    ## (401) Unauthenticated
    All the endpoints excepting issuing a token are protected. This means you can't access the content of them if you are not authenticated. If you try to access an endpoint while unauthenticated, the API will respond with a `401` HTTP status code and a message with the following format:

    ```json
    {
      "message": "Unauthenticated."
    }
    ```

    ## (403) Forbidden
    In addition of authentication, all the endpoints are protected with permissions that are granted per user. This means you can't access the content of them if you are not authorized. If you try to access an endpoint without the needed permissions, the API will respond with a `403` HTTP status code and a message with the following format:

    ```json
    {
      "message": "Forbidden."
    }
    ```

    ## (422) Invalid Input
    When a request require input from the end user it'll be validated and in case something is wrong with the provided information, the API will respond with a `422` HTTP status code and a message with the following format:

    ```json
    {
        "message": "Unprocesable Entity.",
        "exception": "Illuminate\Validation\ValidationException",
        "errors": {
            "email": [
                "The email field is required"
            ],
            "name": [
                "The name must is required",
                "The name must be an string"
            ]
        }
        "trace": [
            {...},
            {...}
        ]
    }
    ```

    ## (429) Rate limiting
    All the requests are rate limit with a number of 60 request per minute per user/ip. If you try to do more requests than allowed in such period the API will respond with a `429` HTTP status code and a message with the following format:

    ```json
    {
      "message": "You have exceeded the rate limit. Please try again later."
    }
    ```

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: 1a6def57-a7dc-41bc-badf-a2b722eb8690|HzLVOLZYUqbbpKXogsl67AdMsvoePy70jfAWL92B

  schemas:
    paginator:
      type: object
      properties:
        current_page:
          type: integer
          example: 1
        from:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
        per_page:
          type: integer
          example: 15
        to:
          type: integer
          example: 1
        total:
          type: integer
          example: 1

    page:
      type: object
      properties:
        number:
          type: integer
          example: 1
          minimum: 1
        size:
          type: integer
          example: 30
          minimum: 1
          maximum: 30

# Defined in each endpoint
paths: {}
